(* ************************** *)
(* *****  Information   ***** *)
(* ************************** *)
M$ModelName = "HEL";

M$Information = {
  Authors      -> {"A. Alloul, B. Fuks, V. Sanz"},
  Version      -> "2.0",
  Date         -> "11. 03. 2014",
  Institutions -> {"GRPHE Strasbourg / U. Haute Alsace", "CERN / IPHC Strasbourg / U. Strasbourg", "University of Sussex"},
  Emails       -> {"adam.alloul@iphc.cnrs.fr", "benjamin.fuks@iphc.cnrs.fr", "v.sanz@sussex.ac.uk"},
  References   -> "arXiv:1310.5150",
  URLs         -> "https://feynrules.irmp.ucl.ac.be/wiki/HEL"
};

FeynmanGauge = True;

(* Change log *)
 (* v1.1 (23.10.2013) BF: Fixing the coupling orders                                   *)
 (* v1.2 (24.10.2013) BF: Adding the SM gghh contribution in the large mtop limit      *)
 (* v2.0 (11.03.2014) BF: Adding the full SM + modifying the parameters cf. NP effects *)

(* ************************** *)
(* *****  Gauge groups  ***** *)
(* ************************** *)
M$GaugeGroups = {
  U1Y  == { 
    Abelian          -> True,  
    CouplingConstant -> g1, 
    GaugeBoson       -> B, 
    Charge           -> Y
  },
  SU2L == { 
    Abelian           -> False, 
    CouplingConstant  -> gw, 
    GaugeBoson        -> Wi, 
    StructureConstant -> Eps, 
    Representations   -> {Ta,SU2D}, 
    Definitions       -> {Ta[a_,b_,c_]->PauliSigma[a,b,c]/2, FSU2L[i_,j_,k_]:> I Eps[i,j,k]}
  },
  SU3C == { 
    Abelian           -> False, 
    CouplingConstant  -> gs, 
    GaugeBoson        -> G,
    StructureConstant -> f, 
    Representations   -> {T,Colour}, 
    SymmetricTensor   -> dSUN
  } 
};

(* ************************** *)
(* *****    Indices     ***** *)
(* ************************** *)
IndexRange[Index[SU2W      ]] = Unfold[Range[3]]; 
IndexRange[Index[SU2D      ]] = Unfold[Range[2]];
IndexRange[Index[Gluon     ]] = NoUnfold[Range[8]];
IndexRange[Index[Colour    ]] = NoUnfold[Range[3]]; 
IndexRange[Index[Generation]] = Range[3];
IndexStyle[SU2W,       j];
IndexStyle[SU2D,       k];
IndexStyle[Gluon,      a];
IndexStyle[Colour,     m];
IndexStyle[Generation, f];


(* ************************** *)
(* *****  Orders        ***** *)
(* ************************** *)
M$InteractionOrderHierarchy = { {QCD, 1}, {QED, 2}, {NP,1} };

M$InteractionOrderLimit = { {QCD, 99}, {QED, 99} , {NP,1}};


(* ************************** *)
(* **** Particle classes **** *)
(* ************************** *)
M$ClassesDescription = {

(* Gauge bosons: physical vector fields *)
  V[1] == { 
    ClassName       -> A, 
    SelfConjugate   -> True,  
    Mass            -> 0,  
    Width           -> 0,  
    ParticleName    -> "a", 
    PDG             -> 22, 
    PropagatorLabel -> "a", 
    PropagatorType  -> W, 
    PropagatorArrow -> None,
    FullName        -> "Photon"
  },
  V[2] == { 
    ClassName       -> Z, 
    SelfConjugate   -> True,
    Mass            -> {MZ, Internal},
    Width           -> {WZ, 2.4952},
    ParticleName    -> "Z", 
    PDG             -> 23, 
    PropagatorLabel -> "Z",
    PropagatorType  -> Sine,
    PropagatorArrow -> None,
    FullName        -> "Z"
  },
  V[3] == {
    ClassName        -> W,
    SelfConjugate    -> False,
    Mass             -> {MW, 80.385},
    Width            -> {WW, 2.085},
    ParticleName     -> "W+",
    AntiParticleName -> "W-",
    QuantumNumbers   -> {Q -> 1},
    PDG              -> 24, 
    PropagatorLabel  -> "W",
    PropagatorType   -> Sine,
    PropagatorArrow  -> Forward,
    FullName         -> "W"
  },
  V[4] == {
    ClassName        -> G,
    SelfConjugate    -> True,
    Indices          -> {Index[Gluon]},
    Mass             -> 0,
    Width            -> 0,
    ParticleName     -> "g", 
    PDG              -> 21,
    PropagatorLabel  -> "G",
    PropagatorType   -> C,
    PropagatorArrow  -> None,
    FullName         -> "G"
  },

(* Ghosts: related to physical gauge bosons *)
  U[1] == { 
    ClassName       -> ghA, 
    SelfConjugate   -> False,
    Ghost           -> A,
    QuantumNumbers  -> {GhostNumber -> 1},
    Mass            -> 0,
    Width	    -> 0,
    PropagatorLabel -> "uA",
    PropagatorType  -> GhostDash,
    PropagatorArrow -> Forward
  },
  U[2] == {
    ClassName       -> ghZ,
    SelfConjugate   -> False,
    Ghost           -> Z,
    QuantumNumbers  -> {GhostNumber -> 1},
    Mass            -> {MZ,Internal},
    Width	    -> {WZ, 2.4952},
    PropagatorLabel -> "uZ",
    PropagatorType  -> GhostDash,
    PropagatorArrow -> Forward
  },
  U[31] == { 
    ClassName       -> ghWp,
    SelfConjugate   -> False, 
    Ghost           -> W,
    QuantumNumbers  -> {GhostNumber -> 1, Q -> 1},
    Mass            -> {MW,80.385}, 
    Width           -> {WW, 2.085}, 
    PropagatorLabel -> "uWp",
    PropagatorType  -> GhostDash, 
    PropagatorArrow -> Forward
  },
  U[32] == { 
    ClassName       -> ghWm,
    SelfConjugate   -> False, 
    Ghost           -> Wbar,
    QuantumNumbers  -> {GhostNumber -> 1, Q -> -1},
    Mass            -> {MW,80.385}, 
    Width           -> {WW, 2.085},
    PropagatorLabel -> "uWm",
    PropagatorType  -> GhostDash, 
    PropagatorArrow -> Forward
  },
  U[4] == { 
    ClassName       -> ghG, 
    SelfConjugate   -> False,
    Indices         -> {Index[Gluon]},
    Ghost           -> G,
    PDG             -> 82,
    QuantumNumbers  ->{GhostNumber -> 1}, 
    Mass            -> 0,
    Width	    -> 0,
    PropagatorLabel -> "uG",
    PropagatorType  -> GhostDash,
    PropagatorArrow -> Forward
  },

(* Gauge bosons: unphysical vector fields *)
  V[11] == { 
    ClassName     -> B, 
    Unphysical    -> True, 
    SelfConjugate -> True, 
    Definitions   -> { B[mu_] -> -sw Z[mu]+cw A[mu]} 
  },
  V[12] == { 
    ClassName     -> Wi,
    Unphysical    -> True,
    SelfConjugate -> True, 
    Indices       -> {Index[SU2W]},
    FlavorIndex   -> SU2W,
    Definitions   -> { Wi[mu_,1] -> (Wbar[mu]+W[mu])/Sqrt[2], Wi[mu_,2] -> (Wbar[mu]-W[mu])/(I*Sqrt[2]), Wi[mu_,3] -> cw Z[mu] + sw A[mu]}
  },

(* Ghosts: related to unphysical gauge bosons *)
  U[11] == {
    ClassName     -> ghB, 
    Unphysical    -> True,
    SelfConjugate -> False,
    Ghost         -> B, 
    Definitions   -> { ghB -> -sw ghZ + cw ghA}
  },
  U[12] == {
    ClassName     -> ghWi,
    Unphysical    -> True,
    SelfConjugate -> False,
    Ghost         -> Wi,
    Indices       -> {Index[SU2W]},
    FlavorIndex   -> SU2W,
    Definitions   -> { ghWi[1] -> (ghWp+ghWm)/Sqrt[2], ghWi[2] -> (ghWm-ghWp)/(I*Sqrt[2]), ghWi[3] -> cw ghZ+sw ghA}
  } ,

(* Fermions: physical fields *)
  F[1] == {
    ClassName        -> vl,
    ClassMembers     -> {ve,vm,vt},
    Indices          -> {Index[Generation]},
    FlavorIndex      -> Generation,
    SelfConjugate    -> False,
    Mass             -> 0,
    Width            -> 0,
    QuantumNumbers   -> {LeptonNumber -> 1},
    PropagatorLabel  -> {"v", "ve", "vm", "vt"} ,
    PropagatorType   -> S,
    PropagatorArrow  -> Forward,
    PDG              -> {12,14,16},
    ParticleName     -> {"ve","vm","vt"},
    AntiParticleName -> {"ve~","vm~","vt~"},
    FullName         -> {"Electron-neutrino", "Mu-neutrino", "Tau-neutrino"}
  },
  F[2] == {
    ClassName        -> l,
    ClassMembers     -> {e, mu, ta},
    Indices          -> {Index[Generation]},
    FlavorIndex      -> Generation,
    SelfConjugate    -> False,
    Mass             -> {Ml, {Me,5.11*^-4}, {MMU,0.10566}, {MTA,1.777}},
    Width            -> 0,
    QuantumNumbers   -> {Q -> -1, LeptonNumber -> 1},
    PropagatorLabel  -> {"l", "e", "mu", "ta"},
    PropagatorType   -> Straight,
    PropagatorArrow  -> Forward,
    PDG              -> {11, 13, 15},
    ParticleName     -> {"e-", "mu-", "ta-"},
    AntiParticleName -> {"e+", "mu+", "ta+"},
    FullName         -> {"Electron", "Muon", "Tau"} 
  },
  F[3] == {
    ClassName        -> uq,
    ClassMembers     -> {u, c, t},
    Indices          -> {Index[Generation], Index[Colour]},
    FlavorIndex      -> Generation,
    SelfConjugate    -> False,
    Mass             -> {Mu, {MU, 2.55*^-3}, {MC,1.27}, {MT,172}},
    Width            -> {0, 0, {WT,1.50833649}},
    QuantumNumbers   -> {Q -> 2/3},
    PropagatorLabel  -> {"uq", "u", "c", "t"},
    PropagatorType   -> Straight,
    PropagatorArrow  -> Forward,
    PDG              -> {2, 4, 6}, 
    ParticleName     -> {"u",  "c",  "t" },
    AntiParticleName -> {"u~", "c~", "t~"},
    FullName         -> {"u-quark", "c-quark", "t-quark"}
  },
  F[4] == {
    ClassName        -> dq,
    ClassMembers     -> {d, s, b},
    Indices          -> {Index[Generation], Index[Colour]},
    FlavorIndex      -> Generation,
    SelfConjugate    -> False,
    Mass             -> {Md, {MD,5.04*^-3}, {MS,0.101}, {MB,4.7}},
    Width            -> 0,
    QuantumNumbers   -> {Q -> -1/3},
    PropagatorLabel  -> {"dq", "d", "s", "b"},
    PropagatorType   -> Straight, 
    PropagatorArrow  -> Forward,
    PDG              -> {1,3,5},
    ParticleName     -> {"d",  "s",  "b" },
    AntiParticleName -> {"d~", "s~", "b~"},
    FullName         -> {"d-quark", "s-quark", "b-quark"}
  },

(* Fermions: unphysical fields *)
  F[11] == { 
    ClassName      -> LL, 
    Unphysical     -> True, 
    Indices        -> {Index[SU2D], Index[Generation]},
    FlavorIndex    -> SU2D,
    SelfConjugate  -> False,
    QuantumNumbers -> {Y -> -1/2},
    Definitions    -> { LL[sp1_,1,ff_] :> Module[{sp2}, ProjM[sp1,sp2] vl[sp2,ff]], LL[sp1_,2,ff_] :> Module[{sp2}, ProjM[sp1,sp2] l[sp2,ff]] }
  },
  F[12] == { 
    ClassName      -> lR, 
    Unphysical     -> True, 
    Indices        -> {Index[Generation]},
    FlavorIndex    -> Generation,
    SelfConjugate  -> False,
    QuantumNumbers -> {Y -> -1},
    Definitions    -> { lR[sp1_,ff_] :> Module[{sp2}, ProjP[sp1,sp2] l[sp2,ff]] }
  },
  F[13] == { 
    ClassName      -> QL, 
    Unphysical     -> True, 
    Indices        -> {Index[SU2D], Index[Generation], Index[Colour]},
    FlavorIndex    -> SU2D,
    SelfConjugate  -> False,
    QuantumNumbers -> {Y -> 1/6},
    Definitions    -> { 
      QL[sp1_,1,ff_,cc_] :> Module[{sp2}, ProjM[sp1,sp2] uq[sp2,ff,cc]], 
      QL[sp1_,2,ff_,cc_] :> Module[{sp2,ff2}, CKM[ff,ff2] ProjM[sp1,sp2] dq[sp2,ff2,cc]] }
  },
  F[14] == { 
    ClassName      -> uR, 
    Unphysical     -> True, 
    Indices        -> {Index[Generation], Index[Colour]},
    FlavorIndex    -> Generation,
    SelfConjugate  -> False,
    QuantumNumbers -> {Y -> 2/3},
    Definitions    -> { uR[sp1_,ff_,cc_] :> Module[{sp2}, ProjP[sp1,sp2] uq[sp2,ff,cc]] }
  },
  F[15] == { 
    ClassName      -> dR, 
    Unphysical     -> True, 
    Indices        -> {Index[Generation], Index[Colour]},
    FlavorIndex    -> Generation,
    SelfConjugate  -> False,
    QuantumNumbers -> {Y -> -1/3},
    Definitions    -> { dR[sp1_,ff_,cc_] :> Module[{sp2}, ProjP[sp1,sp2] dq[sp2,ff,cc]] }
  },

(* Higgs: physical scalars  *)
  S[1] == {
    ClassName       -> H,
    SelfConjugate   -> True,
    Mass            -> {MH,125},
    Width           -> {WH,0.00407},
    PropagatorLabel -> "H",
    PropagatorType  -> D,
    PropagatorArrow -> None,
    PDG             -> 25,
    ParticleName    -> "H",
    FullName        -> "H"
  },

(* Higgs: physical scalars  *)
  S[2] == {
    ClassName       -> G0,
    SelfConjugate   -> True,
    Goldstone       -> Z,
    Mass            -> {MZ, Internal},
    Width           -> {WZ, 2.4952},
    PropagatorLabel -> "Go",
    PropagatorType  -> D,
    PropagatorArrow -> None,
    PDG             -> 250,
    ParticleName    -> "G0",
    FullName        -> "G0"
  },
  S[3] == {
    ClassName        -> GP,
    SelfConjugate    -> False,
    Goldstone        -> W,
    Mass             -> {MW, 80.385},
    QuantumNumbers   -> {Q -> 1},
    Width            -> {WW, 2.085},
    PropagatorLabel  -> "GP",
    PropagatorType   -> D,
    PropagatorArrow  -> None,
    PDG              -> 251,
    ParticleName     -> "G+",
    AntiParticleName -> "G-",
    FullName         -> "GP"
  },

(* Higgs: unphysical scalars  *)
  S[11] == { 
    ClassName      -> Phi, 
    Unphysical     -> True, 
    Indices        -> {Index[SU2D]},
    FlavorIndex    -> SU2D,
    SelfConjugate  -> False,
    QuantumNumbers -> {Y -> 1/2},
    Definitions    -> { Phi[1] -> -I GP, Phi[2] -> (vev + H + I G0)/Sqrt[2]  }
  }
};


(* ************************** *)
(* *****     Gauge      ***** *)
(* *****   Parameters   ***** *)
(* *****   (FeynArts)   ***** *)
(* ************************** *)

GaugeXi[ V[1]  ] = GaugeXi[A];
GaugeXi[ V[2]  ] = GaugeXi[Z];
GaugeXi[ V[3]  ] = GaugeXi[W];
GaugeXi[ V[4]  ] = GaugeXi[G];
GaugeXi[ S[1]  ] = 1;
GaugeXi[ S[2]  ] = GaugeXi[Z];
GaugeXi[ S[3]  ] = GaugeXi[W];
GaugeXi[ U[1]  ] = GaugeXi[A];
GaugeXi[ U[2]  ] = GaugeXi[Z];
GaugeXi[ U[31] ] = GaugeXi[W];
GaugeXi[ U[32] ] = GaugeXi[W];
GaugeXi[ U[4]  ] = GaugeXi[G];


(* ************************** *)
(* *****   Parameters   ***** *)
(* ************************** *)
(* The loop coefficients *)
sert[x_] := 1+ 7/30 x + 2/21 x^2 + 26/525 x^3;
serw[xw_, xt_] := 1 + xw * 66/235 +xw^2 * 228/1645 + xw^3 * 696/8225 +
            xw^4 * 5248/90475 +xw^5 * 1280/29939+ xw^6 * 54528/1646645- 
            xt * 56/705 - xt^2 * 32/987;

M$Parameters = {
  (* New physics parameters *)
  cH  == { TeX -> Subscript[C,H],          ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 1 , InteractionOrder -> {NP,1} },
  cT  == { TeX -> Subscript[C,T],          ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 2 , InteractionOrder -> {NP,1} },
  c6  == { TeX -> Subscript[C,6],          ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 3 , InteractionOrder -> {NP,1} },
  cu  == { TeX -> Subscript[C,u],          ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 4 , InteractionOrder -> {NP,1} },
  cd  == { TeX -> Subscript[C,d],          ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 5 , InteractionOrder -> {NP,1} },
  cl  == { TeX -> Subscript[C,l],          ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 6 , InteractionOrder -> {NP,1} },
  cWW == { TeX -> Subscript[C,W],          ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 7 , InteractionOrder -> {NP,1} },
  cB  == { TeX -> Subscript[C,B],          ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 8 , InteractionOrder -> {NP,1} },
  cHW == { TeX -> Subscript[C,HW],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 9 , InteractionOrder -> {NP,1} },
  cHB == { TeX -> Subscript[C,HB],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 10, InteractionOrder -> {NP,1} },
  cA  == { TeX -> Subscript[C,\[Gamma]],   ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 11, InteractionOrder -> {NP,1} },
  cG  == { TeX -> Subscript[C,g] ,         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 12, InteractionOrder -> {NP,1} },
  cHQ == { TeX -> Subscript[C,Hq],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 13, InteractionOrder -> {NP,1} },
  cpHQ== { TeX -> Subscript[C',Hq],        ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 14, InteractionOrder -> {NP,1} },
  cHu == { TeX -> Subscript[C,Hu],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 15, InteractionOrder -> {NP,1} },
  cHd == { TeX -> Subscript[C,Hd],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 16, InteractionOrder -> {NP,1} },
  cHud== { TeX -> Subscript[C,Hud],        ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 17, InteractionOrder -> {NP,1} },
  cHL == { TeX -> Subscript[C,Hl],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 18, InteractionOrder -> {NP,1} },
  cpHL== { TeX -> Subscript[C',Hl],        ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 19, InteractionOrder -> {NP,1} },
  cHe == { TeX -> Subscript[C,He],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 20, InteractionOrder -> {NP,1} },
  cuB == { TeX -> Subscript[C,uB],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 21, InteractionOrder -> {NP,1} },
  cuW == { TeX -> Subscript[C,uW],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 22, InteractionOrder -> {NP,1} },
  cuG == { TeX -> Subscript[C,uG],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 23, InteractionOrder -> {NP,1} },
  cdB == { TeX -> Subscript[C,dB],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 24, InteractionOrder -> {NP,1} },
  cdW == { TeX -> Subscript[C,dW],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 25, InteractionOrder -> {NP,1} },
  cdG == { TeX -> Subscript[C,dG],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 26, InteractionOrder -> {NP,1} },
  clB == { TeX -> Subscript[C,lB],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 27, InteractionOrder -> {NP,1} },
  clW == { TeX -> Subscript[C,lW],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 28, InteractionOrder -> {NP,1} },
  c3W == { TeX -> Subscript[C,3W],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 29, InteractionOrder -> {NP,1} },
  c3G == { TeX -> Subscript[C,3G],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 30, InteractionOrder -> {NP,1} },
  c2W == { TeX -> Subscript[C,2W],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 31, InteractionOrder -> {NP,1} },
  c2B == { TeX -> Subscript[C,2B],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 32, InteractionOrder -> {NP,1} },
  c2G == { TeX -> Subscript[C,2G],         ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 33, InteractionOrder -> {NP,1} },
  tcHW== { TeX -> Subscript[OverTilde[C],HW], ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 34 , InteractionOrder -> {NP,1}},
  tcHB== { TeX -> Subscript[OverTilde[C],HB], ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 35 , InteractionOrder -> {NP,1}},
  tcG == { TeX -> Subscript[OverTilde[C],G],  ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 36 , InteractionOrder -> {NP,1}},
  tcA == { TeX -> Subscript[OverTilde[C],A],  ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 37 , InteractionOrder -> {NP,1}},
  tc3W== { TeX -> Subscript[OverTilde[C],3W], ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 38 , InteractionOrder -> {NP,1}},
  tc3G== { TeX -> Subscript[OverTilde[C],3G], ParameterType -> External,   Value -> 0.1,   BlockName -> NEWCOUP,   OrderBlock -> 39 , InteractionOrder -> {NP,1}},
  dum  == { TeX -> "", ParameterType -> Internal,   Definition -> {dum->1}, InteractionOrder -> {QED,1}},

  (* External parameters *)
  aEWM1 == { 
    ParameterType    -> External, 
    BlockName        -> SMINPUTS, 
    OrderBlock       -> 1, 
    Value            -> 127.9,
    InteractionOrder -> {QED,-2},
    Description      -> "Inverse of the EW coupling constant at the Z pole"
  },
  Gf == {
    ParameterType    -> External,
    BlockName        -> SMINPUTS,
    OrderBlock       -> 2,
    Value            -> 1.16637*^-5, 
    InteractionOrder -> {QED,2},
    TeX              -> Subscript[G,f],
    Description      -> "Fermi constant"
  },
  aS    == { 
    ParameterType    -> External,
    BlockName        -> SMINPUTS,
    OrderBlock       -> 3,
    Value            -> 0.1184, 
    InteractionOrder -> {QCD,2},
    TeX              -> Subscript[\[Alpha],s],
    Description      -> "Strong coupling constant at the Z pole"
  },
  ymdo == {
    ParameterType -> External,
    BlockName     -> YUKAWA,
    OrderBlock    -> 1,
    Value         -> 5.04*^-3,
    Description   -> "Down Yukawa mass"
  },
  ymup == {
    ParameterType -> External,
    BlockName     -> YUKAWA,
    OrderBlock    -> 2,
    Value         -> 2.55*^-3,
    Description   -> "Up Yukawa mass"
  },
  yms == {
    ParameterType -> External,
    BlockName     -> YUKAWA,
    OrderBlock    -> 3,
    Value         -> 0.101,
    Description   -> "Strange Yukawa mass"
  },
  ymc == {
    ParameterType -> External,
    BlockName     -> YUKAWA,
    OrderBlock    -> 4,
    Value         -> 1.27,
    Description   -> "Charm Yukawa mass"
  },
  ymb == {
    ParameterType -> External,
    BlockName     -> YUKAWA,
    OrderBlock    -> 5,
    Value         -> 4.7,
    Description   -> "Bottom Yukawa mass"
  },
  ymt == {
    ParameterType -> External,
    BlockName     -> YUKAWA,
    OrderBlock    -> 6,
    Value         -> 172,
    Description   -> "Top Yukawa mass"
  },
  yme == {
    ParameterType -> External,
    BlockName     -> YUKAWA,
    OrderBlock    -> 11,
    Value         -> 5.11*^-4,
    Description   -> "Electron Yukawa mass"
  },
  ymm == {
    ParameterType -> External,
    BlockName     -> YUKAWA,
    OrderBlock    -> 13,
    Value         -> 0.10566,
    Description   -> "Muon Yukawa mass"
  },
  ymtau == {
    ParameterType -> External,
    BlockName     -> YUKAWA,
    OrderBlock    -> 15,
    Value         -> 1.777,
    Description   -> "Tau Yukawa mass"
  },
  cabi == {
    ParameterType -> External,
    BlockName     -> CKMBLOCK,
    OrderBlock    -> 1,
    Value         -> 0.227736,
    TeX           -> Subscript[\[Theta], c],
    Description   -> "Cabibbo angle"
  },

  (* Internal Parameters *)
  aEW == {
    ParameterType    -> Internal,
    Value            -> 1/aEWM1,
    InteractionOrder -> {QED,2},
    TeX              -> Subscript[\[Alpha], EW],
    Description      -> "Electroweak coupling contant"
  },
  ee == { 
    ParameterType    -> Internal, 
    Value            -> Sqrt[4 Pi aEW], 
    InteractionOrder -> {QED,1}, 
    TeX              -> e,  
    Description      -> "Electric coupling constant"
  },
  vev == {
    ParameterType    -> Internal,
    Value            -> Sqrt[1/(Sqrt[2] Gf)],
    InteractionOrder -> {QED,-1},
    Description      -> "Higgs vacuum expectation value"
  },
  sw == { 
    ParameterType -> Internal, 
    Value         -> ee*vev/(2*MW),
    TeX           -> Subscript[s,w],
    Description   -> "Sine of the Weinberg angle"
  },
  cw == { 
    ParameterType -> Internal, 
    Value         -> Sqrt[1-sw^2], 
    TeX           -> Subscript[c,w], 
    Description   -> "Cosine of the Weinberg angle"
  },
  gw == { 
    ParameterType    -> Internal, 
    Definitions      -> {gw->ee/sw}, 
    InteractionOrder -> {QED,1},  
    TeX              -> Subscript[g,w], 
    Description      -> "Weak coupling constant at the Z pole"
  },
  g1 == { 
    ParameterType    -> Internal, 
    Definitions      -> {g1->ee/cw}, 
    InteractionOrder -> {QED,1},  
    TeX              -> Subscript[g,1], 
    Description      -> "U(1)Y coupling constant at the Z pole"
  },
  MZ == { 
    ParameterType -> Internal, 
    Value         -> Sqrt[gw^2 vev^2/(4 cw^2) (1-cT+8 cA sw^4/cw^2)], 
    TeX           -> Subscript[M,Z], 
    Description   -> "Z mass"
  },
  gs == { 
    ParameterType    -> Internal, 
    Value            -> Sqrt[4 Pi aS],
    InteractionOrder -> {QCD,1},  
    TeX              -> Subscript[g,s], 
    ParameterName    -> G,
    Description      -> "Strong coupling constant at the Z pole"
  },
  lam == {
    ParameterType    -> Internal,
    Definitions      -> {lam->MH^2/(2 vev^2)*(1-13/8*c6+cH)},
    InteractionOrder -> {QED, 2},
    Description      -> "Higgs quartic coupling"
  },
  muH == {
    ParameterType -> Internal,
    Definitions   -> {muH->(1+c6/4) Sqrt[lam vev^2]},
    TeX           -> \[Mu],
    Description   -> "Coefficient of the quadratic piece of the Higgs potential"
  },
  yl == {
    ParameterType    -> Internal,
    Indices          -> {Index[Generation], Index[Generation]},
    Definitions      -> {yl[i_?NumericQ, j_?NumericQ] :> 0  /; (i =!= j)},
    Value            -> {yl[1,1] -> Sqrt[2] yme / vev, yl[2,2] -> Sqrt[2] ymm / vev, yl[3,3] -> Sqrt[2] ymtau / vev},
    InteractionOrder -> {QED, 1},
    ParameterName    -> {yl[1,1] -> ye, yl[2,2] -> ym, yl[3,3] -> ytau},
    TeX              -> Superscript[y, l],
    Description      -> "Lepton Yukawa couplings"
  },
  yu == {
    ParameterType    -> Internal,
    Indices          -> {Index[Generation], Index[Generation]},
    Definitions      -> {yu[i_?NumericQ, j_?NumericQ] :> 0  /; (i =!= j)},
    Value            -> {yu[1,1] -> Sqrt[2] ymup/vev, yu[2,2] -> Sqrt[2] ymc/vev, yu[3,3] -> Sqrt[2] ymt/vev},
    InteractionOrder -> {QED, 1},
    ParameterName    -> {yu[1,1] -> yup, yu[2,2] -> yc, yu[3,3] -> yt},
    TeX              -> Superscript[y, u],
    Description      -> "Up-type Yukawa couplings"
  },
  yd == {
    ParameterType    -> Internal,
    Indices          -> {Index[Generation], Index[Generation]},
    Definitions      -> {yd[i_?NumericQ, j_?NumericQ] :> 0  /; (i =!= j)},
    Value            -> {yd[1,1] -> Sqrt[2] ymdo/vev, yd[2,2] -> Sqrt[2] yms/vev, yd[3,3] -> Sqrt[2] ymb/vev},
    InteractionOrder -> {QED, 1},
    ParameterName    -> {yd[1,1] -> ydo, yd[2,2] -> ys, yd[3,3] -> yb},
    TeX              -> Superscript[y, d],
    Description      -> "Down-type Yukawa couplings"
  },
(* N. B. : only Cabibbo mixing! *)
  CKM == { 
    ParameterType -> Internal,
    Indices       -> {Index[Generation], Index[Generation]},
    Unitary       -> True,
    Value         -> {CKM[1,1] -> Cos[cabi],  CKM[1,2] -> Sin[cabi], CKM[1,3] -> 0,
                      CKM[2,1] -> -Sin[cabi], CKM[2,2] -> Cos[cabi], CKM[2,3] -> 0,
                      CKM[3,1] -> 0,          CKM[3,2] -> 0,         CKM[3,3] -> 1},
    TeX         -> Superscript[V,CKM],
    Description -> "CKM-Matrix"},
  AH  == { TeX->Subscript[A,H], ParameterType->Internal, Value -> ee^2/4/Pi/(Pi*vev)*(47/18)*serw[(MH/2/MW)^2, (MH/2/MT)^2], InteractionOrder -> {QED, 2}},
  GH  == { TeX->Subscript[G,H], ParameterType->Internal, Value -> -gs^2/(4Pi(3Pi vev)) (*sert[(MH/2/MT)^2]*),                InteractionOrder -> {QCD, 2}}
};

(* ************************** *)
(* *****   Lagrangian   ***** *)
(* ************************** *)


LGauge := Block[{mu,nu,ii,aa}, 
  ExpandIndices[-1/4 FS[B,mu,nu] FS[B,mu,nu] - 1/4 FS[Wi,mu,nu,ii] FS[Wi,mu,nu,ii] - 1/4 FS[G,mu,nu,aa] FS[G,mu,nu,aa], FlavorExpand->SU2W]];

LFermions := Block[{mu}, 
  ExpandIndices[I*(
    QLbar.Ga[mu].DC[QL, mu] + LLbar.Ga[mu].DC[LL, mu] + uRbar.Ga[mu].DC[uR, mu] + dRbar.Ga[mu].DC[dR, mu] + lRbar.Ga[mu].DC[lR, mu]), 
  FlavorExpand->{SU2W,SU2D}]/.{CKM[a_,b_] Conjugate[CKM[a_,c_]]->IndexDelta[b,c], CKM[b_,a_] Conjugate[CKM[c_,a_]]->IndexDelta[b,c]}];

LHiggs := Block[{ii,mu, feynmangaugerules},
  feynmangaugerules = If[Not[FeynmanGauge], {G0|GP|GPbar ->0}, {}];
 
  ExpandIndices[DC[Phibar[ii],mu] DC[Phi[ii],mu] + muH^2 Phibar[ii] Phi[ii] - lam Phibar[ii] Phi[ii] Phibar[jj] Phi[jj], FlavorExpand->{SU2D,SU2W}]/.feynmangaugerules
 ];

LYukawa := Block[{sp,ii,jj,cc,ff1,ff2,ff3,yuk,feynmangaugerules},
  feynmangaugerules = If[Not[FeynmanGauge], {G0|GP|GPbar ->0}, {}];
 
  yuk = ExpandIndices[
   -yd[ff2, ff3] CKM[ff1, ff2] QLbar[sp, ii, ff1, cc].dR [sp, ff3, cc] Phi[ii] - 
    yl[ff1, ff3] LLbar[sp, ii, ff1].lR [sp, ff3] Phi[ii] - 
    yu[ff1, ff2] QLbar[sp, ii, ff1, cc].uR [sp, ff2, cc] Phibar[jj] Eps[ii, jj], FlavorExpand -> SU2D];
  yuk = yuk /. { CKM[a_, b_] Conjugate[CKM[a_, c_]] -> IndexDelta[b, c], CKM[b_, a_] Conjugate[CKM[c_, a_]] -> IndexDelta[b, c]};
  yuk+HC[yuk]/.feynmangaugerules
 ];

LGhost := Block[{LGh1,LGhw,LGhs,LGhphi,mu, generators,gh,ghbar,Vectorize,phi1,phi2,togoldstones,doublet,doublet0},
  (* Pure gauge piece *) 	
  LGh1 = -ghBbar.del[DC[ghB,mu],mu];
  LGhw = -ghWibar.del[DC[ghWi,mu],mu];
  LGhs = -ghGbar.del[DC[ghG,mu],mu];

  (* Scalar pieces: see Peskin pages 739-742 *)
  (* phi1 and phi2 are the real degrees of freedom of GP *)
  (* Vectorize transforms a doublet in a vector in the phi-basis, i.e. the basis of real degrees of freedom *)
  gh    = {ghB, ghWi[1], ghWi[2], ghWi[3]};
  ghbar = {ghBbar, ghWibar[1], ghWibar[2], ghWibar[3]};
  generators = {-I/2 g1 IdentityMatrix[2], -I/2 gw PauliSigma[1], -I/2 gw PauliSigma[2], -I/2 gw PauliSigma[3]};
  doublet = Expand[{(-I phi1 - phi2)/Sqrt[2], Phi[2]} /. MR$Definitions /. vev -> 0]; 
  doublet0 = {0, vev/Sqrt[2]};
  Vectorize[{a_, b_}]:= Simplify[{Sqrt[2] Re[Expand[a]], Sqrt[2] Im[Expand[a]], Sqrt[2] Re[Expand[b]], Sqrt[2] Im[Expand[b]]}/.{Im[_]->0, Re[num_]->num}];
  togoldstones := {phi1 -> (GP + GPbar)/Sqrt[2], phi2 -> (-GP + GPbar)/(I Sqrt[2])};
  LGhphi=Plus@@Flatten[Table[-ghbar[[kkk]].gh[[lll]] Vectorize[generators[[kkk]].doublet0].Vectorize[generators[[lll]].(doublet+doublet0)],{kkk,4},{lll,4}]] /.togoldstones;

ExpandIndices[ LGhs + If[FeynmanGauge, LGh1 + LGhw + LGhphi,0], FlavorExpand->SU2W]];

LSM:= LGauge + LFermions + LHiggs + LYukawa + LGhost;

Wvec[mu_,nu_,ii_,jj_]:= Module[{aa},Ta[aa,ii,jj] FS[Wi,mu,nu,aa]];

LSILH := Block[{ii,jj,kk, ff1,ff2,ff3, cc, sp,mu,nu, LHSelf, LHFermions, LHGauge},
  LHSelf = ExpandIndices[
    cH/(2 vev^2) del[Phibar[ii] Phi[ii],mu] del[Phibar[jj] Phi[jj],mu] +
    cT/(2 vev^2) ( Phibar[ii] DC[Phi[ii],mu] - DC[Phibar[ii],mu] Phi[ii]) (Phibar[jj] DC[Phi[jj],mu] - DC[Phibar[jj],mu] Phi[jj]) -
    c6 lam / vev^2 Phibar[ii] Phi[ii] Phibar[jj] Phi[jj] Phibar[kk] Phi[kk],
  FlavorExpand->{SU2W,SU2D}];

  LHFermions = ExpandIndices[
    -cu/vev^2 yu[ff1,ff2] Phibar[ii] Phi[ii] QLbar[sp,jj,ff1,cc].uR[sp,ff2,cc] Phibar[kk] Eps[jj,kk] -
     cd/vev^2 yd[ff2,ff3] CKM[ff1,ff2] Phibar[ii] Phi[ii] QLbar[sp,jj,ff1,cc].dR[sp,ff3,cc] Phi[jj] -
     cl/vev^2 yl[ff1,ff2] Phibar[ii] Phi[ii] LLbar[sp,jj,ff1].lR[sp,ff2] Phi[jj],
  FlavorExpand->{SU2W,SU2D}]/. { CKM[a_, b_] Conjugate[CKM[a_, c_]] -> IndexDelta[b, c], CKM[b_, a_] Conjugate[CKM[c_, a_]] -> IndexDelta[b, c]};

  LHGauge = ExpandIndices[
    I cWW gw / MW^2     DC[Wvec[mu,nu,ii,jj],nu] (Phibar[ii] DC[Phi[jj],mu] - DC[Phibar[ii],mu] Phi[jj]) +
    I cB g1 / (2 MW^2) del[FS[B,mu,nu],nu] (Phibar[ii] DC[Phi[ii],mu] - DC[Phibar[ii],mu] Phi[ii]) +
    2 I cHW gw / MW^2  Wvec[mu,nu,ii,jj] DC[Phibar[ii],mu] DC[Phi[jj],nu] +
    I cHB g1 / MW^2  FS[B,mu,nu] DC[Phibar[ii],mu] DC[Phi[ii],nu] +
    cA g1^2 / MW^2 Phibar[ii] Phi[ii] FS[B,mu,nu] FS[B,mu,nu] +
    cG dum^2 gs^2 / MW^2 Phibar[ii] Phi[ii] FS[G,mu,nu,jj] FS[G,mu,nu,jj],
  FlavorExpand->{SU2W,SU2D}];

  Return[LHSelf + LHFermions + HC[LHFermions] + LHGauge];
];

LF1 := Block[{LFQL, LFQR, LFLL, LFLR, ii,jj,kk,ll,sp1,sp2,ff,cc,mu},
  LFQL = ExpandIndices[
    I cHQ    / vev^2 QLbar.Ga[mu].QL  ( Phibar[ii] DC[Phi[ii],mu] - DC[Phibar[ii],mu] Phi[ii])  +
    4 I cpHQ / vev^2 Ta[aa,ii,jj] Ta[aa,kk,ll] Ga[mu,sp1,sp2] QLbar[sp1,ii,ff,cc].QL[sp2,jj,ff,cc]  ( Phibar[kk] DC[Phi[ll],mu] - DC[Phibar[kk],mu] Phi[ll]),
  FlavorExpand->{SU2W,SU2D}];

  LFQR = ExpandIndices[
    I cHu    / (2 vev^2) uRbar.Ga[mu].uR  ( Phibar[ii] DC[Phi[ii],mu] - DC[Phibar[ii],mu] Phi[ii])  +
    I cHd    / (2 vev^2) dRbar.Ga[mu].dR  ( Phibar[ii] DC[Phi[ii],mu] - DC[Phibar[ii],mu] Phi[ii])  +
    I cHud   / vev^2 Eps[ii,jj] uRbar.Ga[mu].dR  ( Phi[jj] DC[Phi[ii],mu] - DC[Phi[jj],mu] Phi[ii]),
  FlavorExpand->{SU2W,SU2D}];

  LFLL = ExpandIndices[
    I cHL    / vev^2 LLbar.Ga[mu].LL  ( Phibar[ii] DC[Phi[ii],mu] - DC[Phibar[ii],mu] Phi[ii])  +
    4 I cpHL / vev^2 Ta[aa,ii,jj] Ta[aa,kk,ll] Ga[mu,sp1,sp2] LLbar[sp1,ii,ff].LL[sp2,jj,ff]  ( Phibar[kk] DC[Phi[ll],mu] - DC[Phibar[kk],mu] Phi[ll]),
  FlavorExpand->{SU2W,SU2D}];

  LFLR = ExpandIndices[
    I cHe    / (2 vev^2) lRbar.Ga[mu].lR  ( Phibar[ii] DC[Phi[ii],mu] - DC[Phibar[ii],mu] Phi[ii]),
  FlavorExpand->{SU2W,SU2D}];

  Return[LFQL + LFQR + HC[LFQR] + LFLL + LFLR];
];

LF2 := Block[{LFu, LFd, LFl, sp1,sp2,sp3, mu,nu, ff1,ff2, ii,jj,kk,ll, cc},
  LFu = ExpandIndices[
    I cuB g1/(2 MW^2) (Ga[mu,sp1,sp3] Ga[nu,sp3,sp2] - Ga[nu,sp1,sp3] Ga[mu,sp3,sp2] ) yu[ff1,ff2] QLbar[sp1,jj,ff1,cc].uR[sp2,ff2,cc] Phibar[kk] Eps[jj,kk] FS[B,mu,nu] +
    I cuW gw/MW^2 Ta[ii,jj,ll] (Ga[mu,sp1,sp3] Ga[nu,sp3,sp2] - Ga[nu,sp1,sp3] Ga[mu,sp3,sp2] ) yu[ff1,ff2] QLbar[sp1,jj,ff1,cc].uR[sp2,ff2,cc] Phibar[kk] Eps[ll,kk] FS[Wi,mu,nu,ii] +
    I cuG gs/MW^2 T[ii,cc1,cc] (Ga[mu,sp1,sp3] Ga[nu,sp3,sp2] - Ga[nu,sp1,sp3] Ga[mu,sp3,sp2] ) yu[ff1,ff2] QLbar[sp1,jj,ff1,cc1].uR[sp2,ff2,cc] Phibar[kk] Eps[jj,kk] FS[G,mu,nu,ii],
  FlavorExpand->{SU2W,SU2D}];

  LFd = ExpandIndices[
    I cdB g1/(2 MW^2) (Ga[mu,sp1,sp3] Ga[nu,sp3,sp2] - Ga[nu,sp1,sp3] Ga[mu,sp3,sp2] ) yd[ff2,ff3] CKM[ff1,ff2] QLbar[sp1,jj,ff1,cc].dR[sp2,ff3,cc] Phi[jj] FS[B,mu,nu] +
    I cdW gw/MW^2 Ta[ii,jj,ll] (Ga[mu,sp1,sp3] Ga[nu,sp3,sp2] - Ga[nu,sp1,sp3] Ga[mu,sp3,sp2] ) yd[ff2,ff3] CKM[ff1,ff2] QLbar[sp1,jj,ff1,cc].dR[sp2,ff3,cc] Phi[ll] FS[Wi,mu,nu,ii] +
    I cdG gs/MW^2 T[ii,cc1,cc] (Ga[mu,sp1,sp3] Ga[nu,sp3,sp2] - Ga[nu,sp1,sp3] Ga[mu,sp3,sp2] ) yd[ff2,ff3] CKM[ff1,ff2] QLbar[sp1,jj,ff1,cc1].dR[sp2,ff3,cc] Phi[jj] FS[G,mu,nu,ii],
  FlavorExpand->{SU2W,SU2D}];

  LFl = ExpandIndices[
    I clB g1/(2 MW^2) (Ga[mu,sp1,sp3] Ga[nu,sp3,sp2] - Ga[nu,sp1,sp3] Ga[mu,sp3,sp2] ) yl[ff1,ff2] LLbar[sp1,jj,ff1].lR[sp2,ff2] Phi[jj] FS[B,mu,nu] +
    I clW gw/MW^2 Ta[ii,jj,ll] (Ga[mu,sp1,sp3] Ga[nu,sp3,sp2] - Ga[nu,sp1,sp3] Ga[mu,sp3,sp2] ) yl[ff1,ff2] LLbar[sp1,jj,ff1].lR[sp2,ff2] Phi[ll] FS[Wi,mu,nu,ii],
  FlavorExpand->{SU2W,SU2D}];

  Return[LFu + LFd + LFl + HC[LFu + LFd + LFl]];
];

LBosons := Block[{LWWW, LGGG, LWW, LBB, LGG, ii,jj,kk,mu,nu,ro},
  LWWW = ExpandIndices[-I c3W/MW^2 gw^3 FSU2L[ii,jj,kk] FS[Wi,mu,nu,ii] FS[Wi,nu,ro,jj] FS[Wi,ro,mu,kk], FlavorExpand->{SU2D,SU2W}];
  LGGG = -I c3G/MW^2 gs^3 FSU3C[ii,jj,kk] FS[G,mu,nu,ii] FS[G,nu,ro,jj] FS[G,ro,mu,kk];

  LWW = ExpandIndices[ c2W/MW^2 DC[FS[Wi,mu,nu,ii],mu] DC[FS[Wi,ro,nu,ii],ro], FlavorExpand->{SU2D,SU2W}];
  LBB = ExpandIndices[ c2B/MW^2 del[FS[B,mu,nu],mu] del[FS[B,ro,nu],ro], FlavorExpand->{SU2D,SU2W}];
  LGG = c2G/MW^2 DC[FS[G,mu,nu,ii],mu] DC[FS[G,ro,nu,ii],ro];

  Return[LWWW + LGGG + LWW + LGG + LBB];
];

LCP := Block[{LHV, LVVV, ii,jj,kk,aa,mu,nu,ro,rop,mup, outlag},
  LHV = ExpandIndices[
    I Eps[mu,nu,ro,sig] tcHW gw/MW^2 Ta[aa,ii,jj] DC[Phibar[ii],mu] DC[Phi[jj],nu] FS[Wi,ro,sig,aa] +
    I/2 Eps[mu,nu,ro,sig] tcHB g1/MW^2 DC[Phibar[ii],mu] DC[Phi[ii],nu] FS[B,ro,sig] +
    1/2 Eps[mu,nu,ro,sig] tcA g1^2/MW^2 Phibar[ii] Phi[ii] FS[B,mu,nu] FS[B,ro,sig] +
    1/2 Eps[mu,nu,ro,sig] dum^2 tcG gs^2/MW^2 Phibar[ii] Phi[ii] FS[G,mu,nu,aa] FS[G,ro,sig,aa],
  FlavorExpand->{SU2W,SU2D}];

  LVVV= ExpandIndices[
    -I/2 Eps[ro,mu,rop,mup] tc3W gw^3/MW^2 FSU2L[ii,jj,kk] FS[Wi,mu,nu,ii] FS[Wi,nu,ro,jj] FS[Wi,rop,mup,kk] +
    -I/2 Eps[ro,mu,rop,mup] tc3G gs^3/MW^2 FSU3C[ii,jj,kk] FS[G,mu,nu,ii] FS[G,nu,ro,jj] FS[G,rop,mup,kk],
  FlavorExpand->{SU2W,SU2D}];

  outlag = OptimizeIndex[LHV+LVVV]/.Eps[args__] :> Signature[{args}] Eps[Sequence @@ Sort[{args}]];
  outlag=outlag /. del[a_, m1_] del[a_, m2_] Eps[n1___, m1_, n2___, m2_, n3___] :> 0;

 Return[ outlag ];
];

LLOPP := -1/4 GH FS[G, mu, nu, b] FS[G, mu, nu, b] H (1-0*H/(2 vev)) - 1/4 AH FS[A, mu, nu] FS[A, mu, nu] H;

RemoveL2[exp_]:= Block[{tmp=Expand[exp]},
  tmp=If[Length[tmp]===1,{tmp}, List@@tmp];
  tmp = Select[tmp, (PRIVATE`GetIntOrder[#]/.{QCD->1, QED->1, PRIVATE`GetIntOrder[__] -> 1}) =!= NP^2 &];
  tmp = Select[tmp, (PRIVATE`GetIntOrder[#]/.{QCD->1, QED->1, PRIVATE`GetIntOrder[__] -> 1}) =!= NP^3 &];
  tmp = Select[tmp, (PRIVATE`GetIntOrder[#]/.{QCD->1, QED->1, PRIVATE`GetIntOrder[__] -> 1}) =!= NP^4 &];
  tmp = Select[tmp, (PRIVATE`GetIntOrder[#]/.{QCD->1, QED->1, PRIVATE`GetIntOrder[__] -> 1}) =!= NP^5 &];
  tmp = Select[tmp, (PRIVATE`GetIntOrder[#]/.{QCD->1, QED->1, PRIVATE`GetIntOrder[__] -> 1}) =!= NP^6 &];
  Return[Plus@@tmp];
];

LagHEL := Block[{lagtmp},
  lagtmp = {LF1+LF2+LSILH+LBosons+LCP+LSM};
  lagtmp = RemoveL2[#/.H->H (1- cH/2)] &/@ lagtmp;
  lagtmp = RemoveL2[#/.G[inds__] :> G[inds] (1 + cG dum^2 gs^2 vev^2/MW^2)] &/@ lagtmp;
  lagtmp = RemoveL2[#/.Z[mu_] :> Z[mu] (1 + cA  ee^2 (1 - cw^2) vev^2/(cw^2 MW^2))] &/@ lagtmp;
  lagtmp = RemoveL2[#/.A[mu_] :> A[mu] (1 + cA  ee^2 vev^2/MW^2) - 2 Z[mu] cA  sw ee^2 vev^2/(cw MW^2)] &/@ lagtmp;
  lagtmp = lagtmp/.Conjugate[CKM[a_, b_]]*CKM[a_, c_]->IndexDelta[b, c];
  lagtmp = OptimizeIndex/@lagtmp;
  Return[(Plus@@lagtmp)+LLOPP];
];


